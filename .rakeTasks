<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup quantityn="" fullCmd="" taksId="rake"><RakeTask quantityn="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup quantityn="" fullCmd="" taksId="action_mailbox"><RakeGroup quantityn="" fullCmd="" taksId="ingress"><RakeTask quantityn="Relay an inbound email from Exim to Action Mailbox (URL and INGRESS_PASSWORD required)" fullCmd="action_mailbox:ingress:exim" taksId="exim" /><RakeTask quantityn="Relay an inbound email from Postfix to Action Mailbox (URL and INGRESS_PASSWORD required)" fullCmd="action_mailbox:ingress:postfix" taksId="postfix" /><RakeTask quantityn="Relay an inbound email from Qmail to Action Mailbox (URL and INGRESS_PASSWORD required)" fullCmd="action_mailbox:ingress:qmail" taksId="qmail" /><RakeTask quantityn="" fullCmd="action_mailbox:ingress:environment" taksId="environment" /></RakeGroup><RakeTask quantityn="Copy over the migration" fullCmd="action_mailbox:install" taksId="install" /><RakeTask quantityn="" fullCmd="action_mailbox:copy_migrations" taksId="copy_migrations" /><RakeGroup quantityn="" fullCmd="" taksId="install"><RakeTask quantityn="" fullCmd="action_mailbox:install:migrations" taksId="migrations" /></RakeGroup><RakeTask quantityn="" fullCmd="action_mailbox:run_installer" taksId="run_installer" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="action_text"><RakeTask quantityn="Copy over the migration, stylesheet, and JavaScript files" fullCmd="action_text:install" taksId="install" /><RakeTask quantityn="" fullCmd="action_text:copy_migrations" taksId="copy_migrations" /><RakeGroup quantityn="" fullCmd="" taksId="install"><RakeTask quantityn="" fullCmd="action_text:install:migrations" taksId="migrations" /></RakeGroup><RakeTask quantityn="" fullCmd="action_text:run_installer" taksId="run_installer" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="active_storage"><RakeTask quantityn="Copy over the migration needed to the application" fullCmd="active_storage:install" taksId="install" /><RakeGroup quantityn="" fullCmd="" taksId="install"><RakeTask quantityn="" fullCmd="active_storage:install:migrations" taksId="migrations" /></RakeGroup><RakeTask quantityn="" fullCmd="active_storage:update" taksId="update" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="app"><RakeTask quantityn="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="app:template" taksId="template" /><RakeTask quantityn="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="app:update" taksId="update" /><RakeGroup quantityn="" fullCmd="" taksId="templates"><RakeTask quantityn="" fullCmd="app:templates:copy" taksId="copy" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="update"><RakeTask quantityn="" fullCmd="app:update:active_storage" taksId="active_storage" /><RakeTask quantityn="" fullCmd="app:update:bin" taksId="bin" /><RakeTask quantityn="" fullCmd="app:update:configs" taksId="configs" /><RakeTask quantityn="" fullCmd="app:update:upgrade_guide_info" taksId="upgrade_guide_info" /></RakeGroup></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="assets"><RakeTask quantityn="Remove old compiled assets" fullCmd="assets:clean[keep]" taksId="clean[keep]" /><RakeTask quantityn="Remove compiled assets" fullCmd="assets:clobber" taksId="clobber" /><RakeTask quantityn="Load asset compile environment" fullCmd="assets:environment" taksId="environment" /><RakeTask quantityn="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /><RakeTask quantityn="" fullCmd="assets:clean" taksId="clean" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="cache_digests"><RakeTask quantityn="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask quantityn="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="db"><RakeTask quantityn="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask quantityn="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeGroup quantityn="" fullCmd="" taksId="environment"><RakeTask quantityn="Set the environment value for the database" fullCmd="db:environment:set" taksId="set" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="fixtures"><RakeTask quantityn="Loads fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask quantityn="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask quantityn="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup quantityn="" fullCmd="" taksId="migrate"><RakeTask quantityn="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask quantityn="" fullCmd="db:migrate:down" taksId="down" /><RakeTask quantityn="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask quantityn="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask quantityn="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask quantityn="Runs setup if database does not exist, or runs migrations if it does" fullCmd="db:prepare" taksId="prepare" /><RakeTask quantityn="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup quantityn="" fullCmd="" taksId="schema"><RakeGroup quantityn="" fullCmd="" taksId="cache"><RakeTask quantityn="Clears a db/schema_cache.yml file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask quantityn="Creates a db/schema_cache.yml file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask quantityn="Creates a db/schema.rb file that is portable against any DB supported by Active Record" fullCmd="db:schema:dump" taksId="dump" /><RakeTask quantityn="Loads a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask quantityn="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask quantityn="Loads the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeGroup quantityn="" fullCmd="" taksId="seed"><RakeTask quantityn="Truncates tables of each database for current environment and loads the seeds" fullCmd="db:seed:replant" taksId="replant" /></RakeGroup><RakeTask quantityn="Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeGroup quantityn="" fullCmd="" taksId="structure"><RakeTask quantityn="Dumps the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask quantityn="Recreates the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /><RakeTask quantityn="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask quantityn="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask quantityn="" fullCmd="db:_dump" taksId="_dump" /><RakeTask quantityn="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask quantityn="" fullCmd="db:charset" taksId="charset" /><RakeTask quantityn="" fullCmd="db:check_protected_environments" taksId="check_protected_environments" /><RakeTask quantityn="" fullCmd="db:collation" taksId="collation" /><RakeGroup quantityn="" fullCmd="" taksId="create"><RakeTask quantityn="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="drop"><RakeTask quantityn="" fullCmd="db:drop:_unsafe" taksId="_unsafe" /><RakeTask quantityn="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask quantityn="" fullCmd="db:forward" taksId="forward" /><RakeTask quantityn="" fullCmd="db:load_config" taksId="load_config" /><RakeTask quantityn="" fullCmd="db:purge" taksId="purge" /><RakeGroup quantityn="" fullCmd="" taksId="purge"><RakeTask quantityn="" fullCmd="db:purge:all" taksId="all" /></RakeGroup><RakeTask quantityn="" fullCmd="db:reset" taksId="reset" /><RakeGroup quantityn="" fullCmd="" taksId="test"><RakeTask quantityn="" fullCmd="db:test:load" taksId="load" /><RakeTask quantityn="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask quantityn="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask quantityn="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask quantityn="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup><RakeTask quantityn="" fullCmd="db:truncate_all" taksId="truncate_all" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="log"><RakeTask quantityn="Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask quantityn="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask quantityn="Restart app by touching tmp/restart.txt" fullCmd="restart" taksId="restart" /><RakeTask quantityn="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask quantityn="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeTask quantityn="Runs all tests in test folder except system ones" fullCmd="test" taksId="test" /><RakeGroup quantityn="" fullCmd="" taksId="test"><RakeTask quantityn="Run tests quickly, but also reset db" fullCmd="test:db" taksId="db" /><RakeTask quantityn="Run system tests only" fullCmd="test:system" taksId="system" /><RakeTask quantityn="" fullCmd="test:channels" taksId="channels" /><RakeTask quantityn="" fullCmd="test:controllers" taksId="controllers" /><RakeTask quantityn="" fullCmd="test:functionals" taksId="functionals" /><RakeTask quantityn="" fullCmd="test:generators" taksId="generators" /><RakeTask quantityn="" fullCmd="test:helpers" taksId="helpers" /><RakeTask quantityn="" fullCmd="test:integration" taksId="integration" /><RakeTask quantityn="" fullCmd="test:jobs" taksId="jobs" /><RakeTask quantityn="" fullCmd="test:mailboxes" taksId="mailboxes" /><RakeTask quantityn="" fullCmd="test:mailers" taksId="mailers" /><RakeTask quantityn="" fullCmd="test:models" taksId="models" /><RakeTask quantityn="" fullCmd="test:prepare" taksId="prepare" /><RakeTask quantityn="" fullCmd="test:run" taksId="run" /><RakeTask quantityn="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="time"><RakeTask quantityn="List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" fullCmd="time:zones[country_or_offset]" taksId="zones[country_or_offset]" /><RakeTask quantityn="" fullCmd="time:zones" taksId="zones" /><RakeGroup quantityn="" fullCmd="" taksId="zones"><RakeTask quantityn="" fullCmd="time:zones:all" taksId="all" /><RakeTask quantityn="" fullCmd="time:zones:local" taksId="local" /><RakeTask quantityn="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="tmp"><RakeTask quantityn="Clear cache, socket and screenshot files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear, tmp:screenshots:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask quantityn="Creates tmp directories for cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup quantityn="" fullCmd="" taksId="cache"><RakeTask quantityn="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="pids"><RakeTask quantityn="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="screenshots"><RakeTask quantityn="" fullCmd="tmp:screenshots:clear" taksId="clear" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="sockets"><RakeTask quantityn="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask quantityn="Lists all available tasks in Webpacker" fullCmd="webpacker" taksId="webpacker" /><RakeGroup quantityn="" fullCmd="" taksId="webpacker"><RakeTask quantityn="Installs Webpacker binstubs in this application" fullCmd="webpacker:binstubs" taksId="binstubs" /><RakeTask quantityn="Verifies that webpack &amp; webpack-dev-server are present" fullCmd="webpacker:check_binstubs" taksId="check_binstubs" /><RakeTask quantityn="Verifies if Node.js is installed" fullCmd="webpacker:check_node" taksId="check_node" /><RakeTask quantityn="Verifies if Yarn is installed" fullCmd="webpacker:check_yarn" taksId="check_yarn" /><RakeTask quantityn="Remove old compiled webpacks" fullCmd="webpacker:clean[keep]" taksId="clean[keep]" /><RakeTask quantityn="Remove the webpack compiled output directory" fullCmd="webpacker:clobber" taksId="clobber" /><RakeTask quantityn="Compile JavaScript packs using webpack for production with digests" fullCmd="webpacker:compile" taksId="compile" /><RakeTask quantityn="Provide information on Webpacker's environment" fullCmd="webpacker:info" taksId="info" /><RakeTask quantityn="Install Webpacker in this application" fullCmd="webpacker:install" taksId="install" /><RakeGroup quantityn="" fullCmd="" taksId="install"><RakeTask quantityn="Install everything needed for Angular" fullCmd="webpacker:install:angular" taksId="angular" /><RakeTask quantityn="Install everything needed for Coffee" fullCmd="webpacker:install:coffee" taksId="coffee" /><RakeTask quantityn="Install everything needed for Elm" fullCmd="webpacker:install:elm" taksId="elm" /><RakeTask quantityn="Install everything needed for Erb" fullCmd="webpacker:install:erb" taksId="erb" /><RakeTask quantityn="Install everything needed for React" fullCmd="webpacker:install:react" taksId="react" /><RakeTask quantityn="Install everything needed for Stimulus" fullCmd="webpacker:install:stimulus" taksId="stimulus" /><RakeTask quantityn="Install everything needed for Svelte" fullCmd="webpacker:install:svelte" taksId="svelte" /><RakeTask quantityn="Install everything needed for Typescript" fullCmd="webpacker:install:typescript" taksId="typescript" /><RakeTask quantityn="Install everything needed for Vue" fullCmd="webpacker:install:vue" taksId="vue" /></RakeGroup><RakeTask quantityn="Verifies if Webpacker is installed" fullCmd="webpacker:verify_install" taksId="verify_install" /><RakeTask quantityn="Support for older Rails versions" fullCmd="webpacker:yarn_install" taksId="yarn_install" /><RakeTask quantityn="" fullCmd="webpacker:clean" taksId="clean" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="yarn"><RakeTask quantityn="Install all JavaScript dependencies as specified via Yarn" fullCmd="yarn:install" taksId="install" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="zeitwerk"><RakeTask quantityn="Checks project structure for Zeitwerk compatibility" fullCmd="zeitwerk:check" taksId="check" /></RakeGroup><RakeTask quantityn="" fullCmd="default" taksId="default" /><RakeGroup quantityn="" fullCmd="" taksId="dev"><RakeTask quantityn="" fullCmd="dev:cache" taksId="cache" /></RakeGroup><RakeTask quantityn="" fullCmd="environment" taksId="environment" /><RakeTask quantityn="" fullCmd="initializers" taksId="initializers" /><RakeTask quantityn="" fullCmd="notes" taksId="notes" /><RakeGroup quantityn="" fullCmd="" taksId="notes"><RakeTask quantityn="" fullCmd="notes:custom" taksId="custom" /><RakeTask quantityn="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask quantityn="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask quantityn="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="railties"><RakeGroup quantityn="" fullCmd="" taksId="install"><RakeTask quantityn="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask quantityn="" fullCmd="routes" taksId="routes" /><RakeTask quantityn="" fullCmd="tmp" taksId="tmp" /><RakeTask quantityn="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask quantityn="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask quantityn="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask quantityn="" fullCmd="tmp/sockets" taksId="tmp/sockets" /><RakeGroup quantityn="" fullCmd="" taksId="webdrivers"><RakeGroup quantityn="" fullCmd="" taksId="chromedriver"><RakeTask quantityn="" fullCmd="webdrivers:chromedriver:remove" taksId="remove" /><RakeTask quantityn="" fullCmd="webdrivers:chromedriver:update" taksId="update" /><RakeTask quantityn="" fullCmd="webdrivers:chromedriver:version" taksId="version" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="edgedriver"><RakeTask quantityn="" fullCmd="webdrivers:edgedriver:remove" taksId="remove" /><RakeTask quantityn="" fullCmd="webdrivers:edgedriver:update" taksId="update" /><RakeTask quantityn="" fullCmd="webdrivers:edgedriver:version" taksId="version" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="geckodriver"><RakeTask quantityn="" fullCmd="webdrivers:geckodriver:remove" taksId="remove" /><RakeTask quantityn="" fullCmd="webdrivers:geckodriver:update" taksId="update" /><RakeTask quantityn="" fullCmd="webdrivers:geckodriver:version" taksId="version" /></RakeGroup><RakeGroup quantityn="" fullCmd="" taksId="iedriver"><RakeTask quantityn="" fullCmd="webdrivers:iedriver:remove" taksId="remove" /><RakeTask quantityn="" fullCmd="webdrivers:iedriver:update" taksId="update" /><RakeTask quantityn="" fullCmd="webdrivers:iedriver:version" taksId="version" /></RakeGroup></RakeGroup></RakeGroup></Settings>
